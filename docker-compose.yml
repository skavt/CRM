#version: '3.7'
#services:
#  php:
#    image: yiisoftware/yii2-php:8.0-apache
#    volumes:
#      - ~/.composer-docker/cache:/root/.composer/cache:delegated
#      - ./:/app:delegated
#    ports:
#      - '8000:80'

#version: '3'
#services:
#  app:
#    build:
#      args:
#        user: admin
#        uid: 1000
#      context: ./
#      dockerfile: docker/php/Dockerfile
#    networks:
#      - agora
#    volumes:
#      - ./:/app
#    depends_on:
#      - db
#    env_file:
#      - .env
#
#  nginx:
#    image: nginx:1.12-alpine
#    networks:
#      - agora
#    ports:
#      - 80:80
#    volumes:
#      - ./:/app
#      - ./docker/vhost.conf:/etc/nginx/conf.d/vhost.conf
#    depends_on:
#      - app

#  db:
#    image: mysql:8.0.24
#    networks:
#      - agora
#    volumes:
#      - /var/lib/mysql
#      - ./docker/mysql/config.cnf:/etc/mysql/conf.d/config.cnf
#    ports:
#      - 3307:3306
#    environment:
#      MYSQL_ROOT_PASSWORD: root
#      MYSQL_DATABASE: yii2_agora
#      MYSQL_USER: yii2_agora
#      MYSQL_PASSWORD: 123456

#networks:
#  agora:
#    external:
#      name: nat

version:  '3.7'

services:

  php:
    image: yiisoftware/yii2-php:8.0-apache
    volumes:
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      - ./:/app:delegated
    ports:
      - '8000:80'
    container_name: "${PROJECT_NAME}_php"
#    environment:
#      APACHE_DOCUMENT_ROOT: /var/www/html/web
#      DB_HOST: ${DB_HOST}
#      DB_USER: ${DB_USER}
#      DB_PASSWORD: ${DB_PASS}
#      DB_NAME: ${DB_NAME}
#      DB_DRIVER: ${DB_DRIVER}
#      COLUMNS: 80 # Set 80 columns for docker exec -it.
#    volumes:
#      - ./:/var/www/html
    labels:
      - "traefik.http.routers.${PROJECT_NAME}_php.rule=Host(`${PROJECT_BASE_URL}`)"

  mysql:
    image: mysql:5.7
    container_name: "mysql"
#    volumes:
#      - /var/lib/mysql
#      - ./docker/mysql/config.cnf:/etc/mysql/conf.d/config.cnf
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: intranet
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}

  mariadb:
    image: mariadb:${MARIADB_TAG}
    container_name: "${PROJECT_NAME}_mariadb"
    stop_grace_period: 30s
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: intranet
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3386:3306"
    #    volumes:
    #      - ./mariadb-init:/docker-entrypoint-initdb.d # Place init .sql file(s) here.
    #      - /path/to/mariadb/data/on/host:/var/lib/mysql # Use bind mount
#
#  pma:
#    image: phpmyadmin/phpmyadmin
#    container_name: "${PROJECT_NAME}_pma"
#    environment:
#      PMA_HOST: ${DB_HOST}
#      PMA_USER: ${DB_USER}
#      PMA_PASSWORD: ${DB_PASS}
#      PHP_UPLOAD_MAX_FILESIZE: 1G
#      PHP_MAX_INPUT_VARS: 1G
#    labels:
#      - "traefik.http.routers.${PROJECT_NAME}_pma.rule=Host(`pma.${PROJECT_BASE_URL}`)"
#
#  mailhog:
#    image: mailhog/mailhog
#    container_name: "${PROJECT_NAME}_mailhog"
#    labels:
#      - "traefik.http.services.${PROJECT_NAME}_mailhog.loadbalancer.server.port=8025"
#      - "traefik.http.routers.${PROJECT_NAME}_mailhog.rule=Host(`mailhog.${PROJECT_BASE_URL}`)"
#
##  portainer:
##    image: portainer/portainer-ce
##    container_name: "${PROJECT_NAME}_portainer"
##    command: --no-auth -H unix:///var/run/docker.sock
##    volumes:
##      - /var/run/docker.sock:/var/run/docker.sock
##    labels:
##      - "traefik.http.routers.${PROJECT_NAME}_portainer.rule=Host(`portainer.${PROJECT_BASE_URL}`)"
#
  traefik:
    image: traefik:v2.0
    container_name: "${PROJECT_NAME}_traefik"
    command: --api.insecure=true --providers.docker
    ports:
      - '80:80'
      - '8080:8080' # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
